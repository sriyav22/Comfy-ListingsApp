import * as React from 'react';
import clsx from 'clsx';
import sliderClasses from './sliderClasses';

var useValueLabelClasses = function useValueLabelClasses(props) {
  var open = props.open;
  var utilityClasses = {
    offset: clsx(sliderClasses.valueLabel, sliderClasses.valueLabelOffset, open && sliderClasses.valueLabelOpen),
    circle: sliderClasses.valueLabelCircle,
    label: sliderClasses.valueLabelLabel
  };
  return utilityClasses;
};
/**
 * @ignore - internal component.
 */


function SliderValueLabelUnstyled(props) {
  var children = props.children,
      className = props.className,
      value = props.value,
      _props$components = props.components,
      components = _props$components === void 0 ? {} : _props$components,
      theme = props.theme;
  var classes = useValueLabelClasses(props);
  var Root = components.Root || 'span';
  return /*#__PURE__*/React.cloneElement(children, {
    className: clsx(children.props.className)
  }, /*#__PURE__*/React.createElement(Root, {
    className: clsx(classes.offset, className),
    theme: theme
  }, /*#__PURE__*/React.createElement("span", {
    className: classes.circle
  }, /*#__PURE__*/React.createElement("span", {
    className: classes.label
  }, value))));
}

export default SliderValueLabelUnstyled;