{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shriya22/Desktop/Semester3/Web Design/Project/final-project-incredibles/webapp/src/App/Components/Listings/Card.js\";\nimport React from \"react\";\nimport './card.css';\nimport Modal from '../Navbar/Modal';\nimport ViewListing from './ViewListing';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Card extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false,\n      favorite: false\n    };\n\n    this.showModal = entry => {\n      this.setState({\n        show: true,\n        entry: entry\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.favorited = () => {\n      let room = { ...this.props.room,\n        Favorite: {\n          isFavorite: !this.state.favorite,\n          byUser: this.props.auth.user.id\n        }\n      }; //The state of favorite is set to the opposite boolean\n\n      this.setState({\n        favorite: !this.state.favorite\n      }); //The API call with method PUT, is called passing the room id as part of the URL, and the body should be JSON.\n\n      fetch(`${'http://localhost:5000/listings'}/${room.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(room),\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n    };\n  }\n\n  //On component load, first it is checked if there are any room listing with the favorite object and if the user favorited \n  //is same as the user logged in then the state of favorite is set to true\n  componentDidMount() {\n    if (this.props.room.Favorite && this.props.room.Favorite.isFavorite && this.props.room.Favorite.byUser === this.props.auth.user.id) {\n      this.setState({\n        favorite: true\n      });\n    }\n  } //The favorited function is called when the favorite icon is clicked and here the room objects; isFavorite state is set to true\n  //and the byUser is set to the id of the user logged in. \n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //As part of the grid layout, the column value is set here, defining one column to 4 columns\n      _jsxDEV(\"div\", {\n        className: \"col-sm-4 mt-5 \",\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          handleClose: this.hideModal,\n          children: this.state.entry === \"ViewListing\" && /*#__PURE__*/_jsxDEV(ViewListing, {\n            listing: this.props.room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card promoting-card \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title font-weight-bold mb-2\",\n                children: [this.props.room.roomType, \" Room Available\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Posted by: \", this.props.room.hostInformation.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card-img-top rounded-0\",\n              src: this.props.room.selectedFile,\n              alt: \"Card image cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#!\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mask rgba-white-slight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"collapse-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"card-text \",\n                id: \"collapseContent\",\n                children: [\"Location: \", this.props.room.address.addressLine1, \" , \", this.props.room.address.city, \", \", this.props.room.address.state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: `fas fa-heart float-right p-1 my-1 mr-3 ${this.state.favorite ? \"after-favorite-color\" : \"favorite-color\"}`,\n                onClick: this.favorited,\n                \"data-toggle\": \"tooltip\",\n                \"data-placement\": \"top\",\n                title: \"I like it\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.showModal('ViewListing'),\n                children: \"More Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    );\n  }\n\n}\n\nCard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/Users/shriya22/Desktop/Semester3/Web Design/Project/final-project-incredibles/webapp/src/App/Components/Listings/Card.js"],"names":["React","Modal","ViewListing","PropTypes","connect","Card","Component","state","show","favorite","showModal","entry","setState","hideModal","favorited","room","props","Favorite","isFavorite","byUser","auth","user","id","fetch","method","body","JSON","stringify","headers","componentDidMount","render","roomType","hostInformation","name","selectedFile","address","addressLine1","city","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './card.css';\nimport Modal from '../Navbar/Modal';\nimport ViewListing from './ViewListing';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n        class Card extends React.Component {\n            \n            //Assigning state to show and filtered city\n            state = {\n                show: false ,\n                favorite: false\n            };\n\n            //This function is called when the more details button is clicked and here the state of show is set to true and entry is set to entry.\n            showModal = (entry) => {\n                this.setState({ show: true , entry : entry});\n            };\n\n            //This function is called to hide the modal, here the state of show is set to false.\n            hideModal = () => {\n                this.setState({ show: false });\n            };\n            \n            //On component load, first it is checked if there are any room listing with the favorite object and if the user favorited \n            //is same as the user logged in then the state of favorite is set to true\n            componentDidMount() {\n                if(this.props.room.Favorite && this.props.room.Favorite.isFavorite && this.props.room.Favorite.byUser === this.props.auth.user.id){\n                    this.setState({\n                        favorite: true\n                    })\n                }\n            }\n\n            //The favorited function is called when the favorite icon is clicked and here the room objects; isFavorite state is set to true\n            //and the byUser is set to the id of the user logged in. \n            favorited = () => {         \n                let room = {\n                    ...this.props.room,\n                    Favorite:{\n                        isFavorite : !this.state.favorite,\n                        byUser : this.props.auth.user.id\n                    }\n                }\n\n                //The state of favorite is set to the opposite boolean\n                this.setState({\n                    favorite: !this.state.favorite\n                })\n\n                //The API call with method PUT, is called passing the room id as part of the URL, and the body should be JSON.\n                    fetch(`${'http://localhost:5000/listings'}/${room.id}`, {\n                      method: 'PUT',\n                      body: JSON.stringify(room),\n                      headers: {\n                          'content-type': 'application/json'\n                      }\n                  })\n              }\n         \n            render() {\n                return(   \n                    //As part of the grid layout, the column value is set here, defining one column to 4 columns\n                    <div className=\"col-sm-4 mt-5 \">\n\n                        {/* The modal component is called when the more details button is clicked and the ViewListing component is called */}\n                        <Modal show={this.state.show} handleClose={this.hideModal}>\n                        {this.state.entry === \"ViewListing\" && <ViewListing listing={this.props.room}/>} \n                        </Modal>\n                       \n                       {/* This block of code is to define the card layout, where each of the information of the room is mapped to \n                       certain values to be displayed in the card layout. Along with the more details button which when clicked \n                       pops up a modal with information and the I like it, favorite icon*/}\n                        <div className=\"card promoting-card \">\n\n                        <div className=\"card-body\">                     \n                            <div>\n                                <h4 className=\"card-title font-weight-bold mb-2\">{this.props.room.roomType} Room Available</h4>\n                                <p className=\"card-text\">Posted by: {this.props.room.hostInformation.name}</p>\n                            </div>\n                        </div>\n\n                        \n                        <div className=\"view overlay\">\n                            <img className=\"card-img-top rounded-0\" src={this.props.room.selectedFile} alt=\"Card image cap\" />\n                            <a href=\"#!\">\n                            <div className=\"mask rgba-white-slight\"></div>\n                            </a>\n                        </div>\n\n                        \n                        <div className=\"card-body\">\n\n                            <div class=\"collapse-content\">                            \n                                <p class=\"card-text \" id=\"collapseContent\">Location: {this.props.room.address.addressLine1} , {this.props.room.address.city}, {this.props.room.address.state}</p>                           \n                                <i class={`fas fa-heart float-right p-1 my-1 mr-3 ${this.state.favorite ? \"after-favorite-color\" : \"favorite-color\"}`} onClick = {this.favorited} data-toggle=\"tooltip\" data-placement=\"top\" title=\"I like it\"></i>\n                                <button onClick={() => this.showModal('ViewListing')} >More Information</button> \n                            </div>\n\n                        </div>\n\n                       \n</div>\n                    </div>\n                  \n                );\n            }                                                                    \n        }\n        Card.propTypes = {\n            auth: PropTypes.object.isRequired\n        };\n        const mapStateToProps = state => ({\n            auth: state.auth\n        });\n        export default connect(\n            mapStateToProps\n        )(Card);"]},"metadata":{},"sourceType":"module"}