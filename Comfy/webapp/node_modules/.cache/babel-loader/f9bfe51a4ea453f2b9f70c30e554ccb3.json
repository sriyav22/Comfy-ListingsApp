{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shriya22/Desktop/Semester3/Web Design/Project/final-project-incredibles/webapp/src/App/Components/Listings/MyListings.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux'; // import Listing from '../Listings/Listing';\n// import React from \"react\";\n\nimport FooterComponent from '../Footer/footer';\nimport NavbarComponent from '../Navbar/navbar';\nimport MyCard from './MyCard';\nimport { fetchListings } from \"../../Store/actions/listingActions\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass MyListings extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userID: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchListings();\n\n    if (this.props.match) {\n      const {\n        userID\n      } = this.props.match.params;\n      this.setState({\n        userID: userID\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.auth);\n\n    if (Object.keys(this.props.auth.user).length === 0) {\n      window.location.href = \"/\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [!this.props.auth.user.id && this.props.listings && this.props.listings.map((room, index) => /*#__PURE__*/_jsxDEV(MyCard, {\n            history: this.props.history,\n            room: room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 34\n          }, this)), this.props.auth.user.id && this.props.listings && this.props.listings.map((room, index) => {\n            console.log(room);\n\n            if (room.createdBy === this.props.auth.user.id) {\n              return /*#__PURE__*/_jsxDEV(MyCard, {\n                room: room\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 53\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nMyListings.propTypes = {\n  fetchListings: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  listings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  listings: state.listings\n});\n\nexport default connect(mapStateToProps, {\n  fetchListings\n})(MyListings);","map":{"version":3,"sources":["/Users/shriya22/Desktop/Semester3/Web Design/Project/final-project-incredibles/webapp/src/App/Components/Listings/MyListings.js"],"names":["React","useSelector","FooterComponent","NavbarComponent","MyCard","fetchListings","axios","PropTypes","connect","MyListings","Component","state","userID","componentDidMount","props","match","params","setState","componentDidUpdate","console","log","auth","Object","keys","user","length","window","location","href","render","history","id","listings","map","room","index","createdBy","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n// import Listing from '../Listings/Listing';\n// import React from \"react\";\nimport FooterComponent from '../Footer/footer';\nimport NavbarComponent from '../Navbar/navbar';\nimport MyCard from './MyCard';\nimport { fetchListings } from \"../../Store/actions/listingActions\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n        class MyListings extends React.Component {\n\n            state = {\n                userID: ''\n            }\n            \n            componentDidMount() {\n                this.props.fetchListings() \n                if(this.props.match){\n                    const { userID } = this.props.match.params\n                    this.setState({\n                        userID: userID\n                    })\n                }  \n          \n              }\n              componentDidUpdate(){\n                console.log(this.props.auth)\n                if(Object.keys(this.props.auth.user).length === 0){\n                    window.location.href = \"/\"\n                }\n            }    \n  \n\n\n   \n              \n            render() {\n                \n                return(\n                    <div>\n                        \n                        <NavbarComponent history={this.props.history}/>\n                        <div className = \"container mt-5\">\n                            <div className = \"row\">\n                                {!this.props.auth.user.id && this.props.listings && this.props.listings.map((room , index) => (\n                            \n                                 <MyCard history={this.props.history} room = {room} />\n                                \n                                ))}\n\n                                {this.props.auth.user.id && \n                                    this.props.listings && \n                                    this.props.listings.map((room , index) => {\n                                        console.log(room)\n                                        if(room.createdBy === this.props.auth.user.id) {\n                                            return (<MyCard room = {room} />)\n                                        }\n                                })}\n\n                                \n                            </div>\n                        </div>\n                        <FooterComponent />\n                    </div>          \n                );\n            }\n        }                                                                        \n\n        MyListings.propTypes = {\n            fetchListings: PropTypes.func.isRequired,\n            auth: PropTypes.object.isRequired,\n            listings : PropTypes.object.isRequired\n        };\n        const mapStateToProps = state => ({\n            auth: state.auth,\n            listings : state.listings\n        });\n        export default connect(\n            mapStateToProps,\n            { fetchListings }\n        )(MyListings);\n\n"]},"metadata":{},"sourceType":"module"}